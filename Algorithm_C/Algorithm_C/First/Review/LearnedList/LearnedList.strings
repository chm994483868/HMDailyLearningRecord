/* 
  LearnedList.strings
  Algorithm_C

  Created by CHM on 2020/7/14.
  Copyright © 2020 CHM. All rights reserved.
*/

// 01. 冒泡排序 O(n*n)
// 02. 插入排序 O(n*n)
// 03. 选择排序 O(n*n)
// 04. 希尔排序 O(n*n)
// 05. 希尔排序优化 O(n*n)
// 06. 快速排序 O(n*logn)
// 07. 归并排序 O(n*logn)
// 08. 堆排序 O(n*logn)
// 09. 堆排序（素燕）O(n*logn)
// 10. 反转二叉树（递归）
// 11. 反转二叉树（栈或者队列）
// 12. 找到链表中倒数第 k 个节点 O(n)
// 13. 重写赋值运算符
// 14. 找到数组中重复的数字 O(1) O(n)
// 15. 找到数组中重复的数字 O(n) O(n)
// 16. 不修改数组找出重复的数字 O(1) O(n*logn)
// 17. 二维数组中查找数字
// 18. 替换字符串中的空格 O(n)
// 19. 往链表的末尾添加一个结点
// 20. 从链表中找到第一个含有某值的节点并删除该节点
// 21. 从尾到头打印链表（递归）（递归在本质上就是一个栈结构）
// 22. 从尾到头打印链表（非递归）
// 23. 根据二叉树前序遍历和中序遍历的结果，重建该二叉树
// 24. 二叉树的下一个节点
// 25. 用两个栈实现队列
// 26. 用两个队列实现栈
// 27. 求 1 + 2 + ... + n 的值（递归和非递归）
// 28. 斐波那契数列（递归和非递归）
// 29. 旋转数组的最小数字。
// 30. 对公司员工年龄排序（计数排序）。
// 31. 矩阵中的路径。
// 32. 机器人的运动范围。
// 33. 剪绳子。
// 34. 二进制中 1 的个数。
// 35. 求数值的整数次方，不得使用库函数，不需要考虑大数问题。
// 36. 打印从 1 到最大的 n 位数。
// 37. 删除链表的节点。
// 38. 删除链表中重复的节点。
// 39. 正则表达式匹配。
// 40. 表示数值的字符串。
// 41. 调整数组顺序使奇数位于偶数前面。
// 42. 链表中倒数第 k 个节点。
// 43. 链表中环的入口节点。
// 44. 反转链表。
// 45. 合并两个排序的链表。
// 46. 树的子结构。
// 47. 二叉树的镜像（反转二叉树）。
// 48. 对称的二叉树。
// 49. 顺时针打印矩阵。
// 50. 包含 min 函数的栈。
// 51. 栈的压入、弹出序列。
// 52. 从上到下打印二叉树。
// 53. 分行从上到下打印二叉树。
// 54. 之字形打印二叉树。
// 55. 二叉搜索树的后序遍历序列。
// 56. 二叉树中和为某一值的路径。
// 57. 复杂链表的复制。
// 58. 二叉搜索树与双向链表。
// 59. 序列化二叉树。
// 60. 字符串的排列。
// 61. 数组中出现次数超过一半的数字。
// 62. 最小的 K 个数。
// 63. 数据流中的中位数。
// 64. 连续子数组的最大和。
// 65. 1~n 整数中 1 出现的次数。
// 66. 数字序列中某一位的数字。
// 67. 把数组拼成最小的数。
// 68. 把数字翻译成字符串。
// 69. 礼物的最大价值。
// 70. 最长不含重复字符的子字符串。
// 71. 丑数。
// 72. 第一个只出现一次的字符。
// 73. 字符流中第一个只出现一次的字符。
// 74. 数组中的逆序对。（解法可由归并排序迁移）
// 75. 两个链表的第一个公共节点。
// 76. 在排序数组中查找数字。
// 77. 0～n-1 中缺失的数字。
// 78. 数组中数值和下标相等的元素。
// 79. 二叉搜索树的第 k 大节点。
// 80. 二叉树的深度。
// 89. 平衡二叉树。
// 90. 数组中数字出现的次数。
// 91. 数组中唯一只出现一次的数字。
// 92. 和为 s 的数字。
// 93. 和为 s 的连续正数序列。
// 94. 翻转字符串。
// 95. 左旋转字符串。
// 96. 队列的最大值。
// 97. 定义队列实现函数 max 返回最大值，要求 max、push_back、pop_front 的时间复杂度都是 O(1);
// 98. n 个🎲的点数。（真的太难了，看了 4 个小时了，还是没有眉目，先过一下，先看下一题。）
// 99. 扑克牌中的顺子。
// 100. 圆圈中最后剩下的数字。
// 101. 股票的最大利润。
// 102. 求 1+2+...+n。
// 103. 不用加减乘除做加法。
// 104. 构建乘积数组。
// 105. 把字符串转换成整数。
// 106. 树中两个节点的最低公共祖先。
